
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f85  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000abb  00000000  00000000  000012ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004e1  00000000  00000000  00001da8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  0000228c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000518  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031a  00000000  00000000  00002838  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002b52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
   8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
   c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  10:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  14:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  18:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  1c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  20:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  24:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  28:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  2c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  30:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  34:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  38:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  3c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  40:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  44:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  48:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  4c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  50:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  54:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  58:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  5c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  60:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  64:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  68:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  6c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  70:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  74:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  78:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  7c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  80:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  84:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  88:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  8c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  90:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  94:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  98:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  9c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  a0:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  a4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  a8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  ac:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  b0:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  b4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  b8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  bc:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  c0:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  c4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  c8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <main>
  dc:	0c 94 24 01 	jmp	0x248	; 0x248 <_exit>

000000e0 <__bad_interrupt>:
  e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e4 <lcd_write_data>:
}

void move_cursor(unsigned char addr)
{
	addr |= (1<<7);
	lcd_write_cmd(addr);
  e4:	72 9a       	sbi	0x0e, 2	; 14
  e6:	73 98       	cbi	0x0e, 3	; 14
  e8:	8b b9       	out	0x0b, r24	; 11
  ea:	2f ef       	ldi	r18, 0xFF	; 255
  ec:	81 ee       	ldi	r24, 0xE1	; 225
  ee:	94 e0       	ldi	r25, 0x04	; 4
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <lcd_write_data+0xc>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_write_data+0x16>
  fa:	00 00       	nop
  fc:	74 9a       	sbi	0x0e, 4	; 14
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	81 ee       	ldi	r24, 0xE1	; 225
 102:	94 e0       	ldi	r25, 0x04	; 4
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <lcd_write_data+0x20>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <lcd_write_data+0x2a>
 10e:	00 00       	nop
 110:	74 98       	cbi	0x0e, 4	; 14
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	81 ee       	ldi	r24, 0xE1	; 225
 116:	94 e0       	ldi	r25, 0x04	; 4
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <lcd_write_data+0x34>
 120:	00 c0       	rjmp	.+0      	; 0x122 <lcd_write_data+0x3e>
 122:	00 00       	nop
 124:	08 95       	ret

00000126 <lcd_write_cmd>:
 126:	72 98       	cbi	0x0e, 2	; 14
 128:	73 98       	cbi	0x0e, 3	; 14
 12a:	8b b9       	out	0x0b, r24	; 11
 12c:	2f ef       	ldi	r18, 0xFF	; 255
 12e:	81 ee       	ldi	r24, 0xE1	; 225
 130:	94 e0       	ldi	r25, 0x04	; 4
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <lcd_write_cmd+0xc>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <lcd_write_cmd+0x16>
 13c:	00 00       	nop
 13e:	74 9a       	sbi	0x0e, 4	; 14
 140:	2f ef       	ldi	r18, 0xFF	; 255
 142:	81 ee       	ldi	r24, 0xE1	; 225
 144:	94 e0       	ldi	r25, 0x04	; 4
 146:	21 50       	subi	r18, 0x01	; 1
 148:	80 40       	sbci	r24, 0x00	; 0
 14a:	90 40       	sbci	r25, 0x00	; 0
 14c:	e1 f7       	brne	.-8      	; 0x146 <lcd_write_cmd+0x20>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <lcd_write_cmd+0x2a>
 150:	00 00       	nop
 152:	74 98       	cbi	0x0e, 4	; 14
 154:	2f ef       	ldi	r18, 0xFF	; 255
 156:	81 ee       	ldi	r24, 0xE1	; 225
 158:	94 e0       	ldi	r25, 0x04	; 4
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <lcd_write_cmd+0x34>
 162:	00 c0       	rjmp	.+0      	; 0x164 <lcd_write_cmd+0x3e>
 164:	00 00       	nop
 166:	08 95       	ret

00000168 <lcd_clear>:
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
 16e:	08 95       	ret

00000170 <lcd_return_home>:
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
 176:	08 95       	ret

00000178 <lcd_ininit>:
	_delay_ms(100);
}

void lcd_ininit()
{
	LCD_DATA_DDR = 0xFF; // port in output mode
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	8a b9       	out	0x0a, r24	; 10
	LCD_DATA = 0x00; // clear port pins
 17c:	1b b8       	out	0x0b, r1	; 11
	LCD_CNTRL_DDR |= ((1<<RS)|(1<<RW)|(1<<EN)); //  port pin set to output mode
 17e:	8d b1       	in	r24, 0x0d	; 13
 180:	8c 61       	ori	r24, 0x1C	; 28
 182:	8d b9       	out	0x0d, r24	; 13
	LCD_CNTRL &= ~((1<<RS)|(1<<RW)|(1<<EN)); // clear port pins
 184:	8e b1       	in	r24, 0x0e	; 14
 186:	83 7e       	andi	r24, 0xE3	; 227
 188:	8e b9       	out	0x0e, r24	; 14
 18a:	08 95       	ret

0000018c <lcd_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18c:	2f e7       	ldi	r18, 0x7F	; 127
 18e:	88 e3       	ldi	r24, 0x38	; 56
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <lcd_init+0x6>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <lcd_init+0x10>
 19c:	00 00       	nop
}

void lcd_init()
{
	_delay_ms(25);
	lcd_write_cmd(0x30);
 19e:	80 e3       	ldi	r24, 0x30	; 48
 1a0:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
 1a4:	8f e3       	ldi	r24, 0x3F	; 63
 1a6:	9c e9       	ldi	r25, 0x9C	; 156
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd_init+0x1c>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <lcd_init+0x22>
 1ae:	00 00       	nop
	_delay_ms(10);
	lcd_write_cmd(0x30);
 1b0:	80 e3       	ldi	r24, 0x30	; 48
 1b2:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
 1b6:	8f e1       	ldi	r24, 0x1F	; 31
 1b8:	9e e4       	ldi	r25, 0x4E	; 78
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <lcd_init+0x2e>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <lcd_init+0x34>
 1c0:	00 00       	nop
	_delay_ms(5);
	lcd_write_cmd(0x30);
 1c2:	80 e3       	ldi	r24, 0x30	; 48
 1c4:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
	// function set
	// 0,0,1,DL=1(8bit), N=1(2line), F= 0(5x8 set), 0,0
	lcd_write_cmd(0b00111000);
 1c8:	88 e3       	ldi	r24, 0x38	; 56
 1ca:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
	// display on
	// 0,0,0,0,1,D=1(disp on),C=1(Cursor on), B=1(blink)
	lcd_write_cmd(0x0F);
 1ce:	8f e0       	ldi	r24, 0x0F	; 15
 1d0:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
	// clear display
	lcd_write_cmd(0x01);
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
	// Entry mode set
	// 0,0,0,0,0,1,I/D=1, SH=0
	lcd_write_cmd(0b00000110);
 1da:	86 e0       	ldi	r24, 0x06	; 6
 1dc:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
 1e0:	08 95       	ret

000001e2 <main>:
void lcd_return_home();
void move_cursor(unsigned char addr);

int main(void)
{
    lcd_ininit();
 1e2:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_ininit>
	lcd_init();
 1e6:	0e 94 c6 00 	call	0x18c	; 0x18c <lcd_init>
	
    while (1) 
    {
		lcd_write_data('A');
 1ea:	81 e4       	ldi	r24, 0x41	; 65
 1ec:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('n');
 1f0:	8e e6       	ldi	r24, 0x6E	; 110
 1f2:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('t');
 1f6:	84 e7       	ldi	r24, 0x74	; 116
 1f8:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('h');
 1fc:	88 e6       	ldi	r24, 0x68	; 104
 1fe:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('o');
 202:	8f e6       	ldi	r24, 0x6F	; 111
 204:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('n');
 208:	8e e6       	ldi	r24, 0x6E	; 110
 20a:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('y');
 20e:	89 e7       	ldi	r24, 0x79	; 121
 210:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
}

void move_cursor(unsigned char addr)
{
	addr |= (1<<7);
	lcd_write_cmd(addr);
 214:	80 ec       	ldi	r24, 0xC0	; 192
 216:	0e 94 93 00 	call	0x126	; 0x126 <lcd_write_cmd>
		lcd_write_data('h');
		lcd_write_data('o');
		lcd_write_data('n');
		lcd_write_data('y');
		move_cursor(0x40);
		lcd_write_data('R');
 21a:	82 e5       	ldi	r24, 0x52	; 82
 21c:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('o');
 220:	8f e6       	ldi	r24, 0x6F	; 111
 222:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('b');
 226:	82 e6       	ldi	r24, 0x62	; 98
 228:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('l');
 22c:	8c e6       	ldi	r24, 0x6C	; 108
 22e:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('e');
 232:	85 e6       	ldi	r24, 0x65	; 101
 234:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_write_data('s');
 238:	83 e7       	ldi	r24, 0x73	; 115
 23a:	0e 94 72 00 	call	0xe4	; 0xe4 <lcd_write_data>
		lcd_clear();
 23e:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clear>
		lcd_return_home();
 242:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_return_home>
 246:	d1 cf       	rjmp	.-94     	; 0x1ea <main+0x8>

00000248 <_exit>:
 248:	f8 94       	cli

0000024a <__stop_program>:
 24a:	ff cf       	rjmp	.-2      	; 0x24a <__stop_program>
